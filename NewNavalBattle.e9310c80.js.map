{"version":3,"sources":["NewNavalBattle.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_RESOLUTION","_FLEET","gameIsOver","Field","battleField","Array","from","length","min","max","Math","ceil","floor","random","result","getRandomIntInclusive","number","coordinates","push","PlayerField","placeShipsOnField","coordinate","row","col","shipLength","startCoordinate","isWithinTheGameField","isOneDeckCanBePlaced","isSurroundingCellsFree","i","randomCoordinate","generateRandomCoordinateXY","canBeAttachedVertical","canBeAttachedHorizontal","attachVertical","attachHorizontal","isCanBeAttachedVertical","isCanBeAttachedHorizontal","attachShip","sourceField","guessField","markSunkDeck","isOneDeckShip","isSunkVertical","setTopPoint","topPoint","setLowPoint","lowPoint","isCompletelySunkBottomSide","isCompletelySunkTopSide","isSunkHorizontal","field","HumanField","index","convertNumberToCoordArr","aiField","humanGuessField","aiAttackRandomCoordinate","markSunkShip","alert","isGameOver","AiField","humanField","aIguessField","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,EAApB;AACA,IAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAf;AACO,IAAIC,UAAU,GAAG,KAAjB;;;IACDC;AAEF,mBAAc;AAAA;;AACV,SAAKC,WAAL,GAAmBC,KAAK,CAACC,IAAN,CAAW;AAACC,MAAAA,MAAM,EAAEP;AAAT,KAAX,EACf;AAAA,aAAMK,KAAK,CAACC,IAAN,CAAW;AAACC,QAAAA,MAAM,EAAEP;AAAT,OAAX,EACF;AAAA,eAAO,GAAP;AAAA,OADE,CAAN;AAAA,KADe,CAAnB;AAGH;;;;WAED,+BAAsBQ,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5BD,MAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,MAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,aAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD,CAH4B,CAG8B;AAC7D;;;WAED,oCAA2BM,MAA3B,EAAmC;AAC/BA,MAAAA,MAAM,GAAG,CAAC,KAAKC,qBAAL,CAA2B,CAA3B,EAA8B,CAA9B,CAAD,EAAmC,KAAKA,qBAAL,CAA2B,CAA3B,EAA8B,CAA9B,CAAnC,CAAT;AACA,aAAOD,MAAP;AACH;;;WAED,iCAAwBE,MAAxB,EAAgC;AAC5B,UAAIC,WAAW,GAAG,EAAlB;AACAA,MAAAA,WAAW,CAACC,IAAZ,CAAiBR,IAAI,CAACE,KAAL,CAAWI,MAAM,GAAGhB,WAApB,CAAjB,EAAmDgB,MAAM,GAAGhB,WAA5D;AACA,aAAOiB,WAAP;AACH;;;;;;IAGCE;;;;;AAEF,yBAAc;AAAA;;AAAA;;AACV;AACA,UAAKlB,MAAL,GAAcA,MAAd;;AACA,UAAKmB,iBAAL;;AAHU;AAIb;;;;WAED,gCAAuBC,UAAvB,EAAmC;AAC/B,UAAIC,GAAG,GAAGD,UAAU,CAAC,CAAD,CAApB;AACA,UAAIE,GAAG,GAAGF,UAAU,CAAC,CAAD,CAApB;;AAEA,UAAIC,GAAG,KAAK,CAAZ,EAAe;AACX,eAAO,KAAKlB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GAAnC,IACA,KAAKnB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GADnC,IAEA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GAFvC,IAGA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GAHnC,IAIA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GAJ9C;AAKH;;AAED,UAAID,GAAG,KAAK,CAAZ,EAAe;AACX,eAAO,KAAKlB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GAAnC,IACA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GADvC,IAEA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GAFnC,IAGA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GAHvC,IAIA,KAAKnB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GAJ1C;AAKH;;AAED,UAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,eAAO,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GAAnC,IACA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GADvC,IAEA,KAAKnB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GAFnC,IAGA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GAHvC,IAIA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GAJ1C;AAKH;;AAED,UAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,eAAO,KAAKnB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GAAnC,IACA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GADvC,IAEA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GAFnC,IAGA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GAHnC,IAIA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GAJ9C;AAKH;;AAED,aAAO,KAAKnB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GAAnC,IACA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GADvC,IAEA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GAFnC,IAGA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GAHvC,IAIA,KAAKnB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAG,CAA5B,MAAmC,GAJnC,IAKA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GALvC,IAMA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAA1B,MAAmC,GANnC,IAOA,KAAKnB,WAAL,CAAiBkB,GAAG,GAAG,CAAvB,EAA0BC,GAAG,GAAG,CAAhC,MAAuC,GAP9C;AASH;;;WAED,iCAAwBC,UAAxB,EAAoCC,eAApC,EAAqD;AAEjD,UAAIH,GAAG,GAAGG,eAAe,CAAC,CAAD,CAAzB;AACA,UAAIF,GAAG,GAAGE,eAAe,CAAC,CAAD,CAAzB;AACA,UAAIX,MAAM,GAAG,IAAb;AACA,UAAIY,oBAAoB,GAAIJ,GAAG,GAAGE,UAAN,GAAmBxB,WAA/C;AACA,UAAI2B,oBAAoB,GAAG,KAAKC,sBAAL,CAA4BH,eAA5B,KAAiD,KAAKrB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAtB,MAA+B,GAA3G;AACA,UAAI,CAACG,oBAAL,EAA2B,OAAO,KAAP;AAC3B,UAAIF,UAAU,KAAK,CAAnB,EAAsB,OAAOG,oBAAP;;AAEtB,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,EAAjC,EAAqC;AACjC,YAAI,KAAKzB,WAAL,CAAiBkB,GAAG,GAAGO,CAAvB,EAA0BN,GAA1B,MAAmC,GAAnC,IAA0C,CAAC,KAAKK,sBAAL,CAA4B,CAACN,GAAG,GAAGO,CAAP,EAAUN,GAAV,CAA5B,CAA/C,EAA4F;AACxFT,UAAAA,MAAM,GAAG,KAAT;AACH;AACJ;;AAED,aAAOA,MAAM,IAAIY,oBAAjB;AACH;;;WAED,mCAA0BF,UAA1B,EAAsCC,eAAtC,EAAuD;AAEnD,UAAIH,GAAG,GAAGG,eAAe,CAAC,CAAD,CAAzB;AACA,UAAIF,GAAG,GAAGE,eAAe,CAAC,CAAD,CAAzB;AACA,UAAIX,MAAM,GAAG,IAAb;AACA,UAAIY,oBAAoB,GAAIH,GAAG,GAAGC,UAAN,GAAmBxB,WAA/C;AACA,UAAI2B,oBAAoB,GAAG,KAAKC,sBAAL,CAA4B,CAACN,GAAD,EAAMC,GAAN,CAA5B,KAA4C,KAAKnB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAtB,MAA+B,GAAtG;AACA,UAAI,CAACG,oBAAL,EAA2B,OAAO,KAAP;AAC3B,UAAIF,UAAU,KAAK,CAAnB,EAAsB,OAAOG,oBAAP;;AAGtB,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,EAAjC,EAAqC;AACjC,YAAI,KAAKzB,WAAL,CAAiBkB,GAAjB,EAAsBC,GAAG,GAAGM,CAA5B,MAAmC,GAAnC,IAA0C,CAAC,KAAKD,sBAAL,CAA4B,CAACN,GAAD,EAAMC,GAAG,GAAGM,CAAZ,CAA5B,CAA/C,EAA4F;AACxFf,UAAAA,MAAM,GAAG,KAAT;AACH;AACJ;;AAED,aAAOA,MAAM,IAAIY,oBAAjB;AACH;;;WAED,oBAAWF,UAAX,EAAuB;AAAA;;AACnB,UAAIM,gBAAgB,GAAG,EAAvB;AACAA,MAAAA,gBAAgB,GAAG,KAAKC,0BAAL,CAAgCD,gBAAhC,CAAnB;AACA,UAAIE,qBAAqB,GAAG,KAA5B;AACA,UAAIC,uBAAuB,GAAG,KAA9B;;AAEA,UAAIC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACvB,aAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,EAAjC,EAAqC;AACjC,UAAA,MAAI,CAACzB,WAAL,CAAiB0B,gBAAgB,CAAC,CAAD,CAAhB,GAAsBD,CAAvC,EAA0CC,gBAAgB,CAAC,CAAD,CAA1D,IAAiE,GAAjE;AACH;AACJ,OAJD;;AAMA,UAAIK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACzB,aAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,EAAjC,EAAqC;AACjC,UAAA,MAAI,CAACzB,WAAL,CAAiB0B,gBAAgB,CAAC,CAAD,CAAjC,EAAsCA,gBAAgB,CAAC,CAAD,CAAhB,GAAsBD,CAA5D,IAAiE,GAAjE;AACH;AACJ,OAJD;;AAMA,aAAO,EAAEG,qBAAqB,IAAIC,uBAA3B,CAAP,GAA6D;AACzDH,QAAAA,gBAAgB,GAAG,KAAKC,0BAAL,CAAgCD,gBAAhC,CAAnB;AACAE,QAAAA,qBAAqB,GAAG,KAAKI,uBAAL,CAA6BZ,UAA7B,EAAyCM,gBAAzC,CAAxB;AACAG,QAAAA,uBAAuB,GAAG,KAAKI,yBAAL,CAA+Bb,UAA/B,EAA2CM,gBAA3C,CAA1B;AACH;;AAEDE,MAAAA,qBAAqB,IAAIC,uBAAzB,GAAmD,KAAKlB,qBAAL,CAA2B,CAA3B,EAA8B,CAA9B,MAAqC,CAArC,GAAyCmB,cAAc,EAAvD,GAA4DC,gBAAgB,EAA/H,GAAoIH,qBAAqB,GAAGE,cAAc,EAAjB,GAAsBC,gBAAgB,EAA/L;AAGH;;;WAED,6BAAoB;AAChB,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK5B,MAAL,CAAYM,MAAhC,EAAwCsB,CAAC,EAAzC,EAA6C;AACzC,aAAKS,UAAL,CAAgB,KAAKrC,MAAL,CAAY4B,CAAZ,CAAhB;AACH;AACJ;;;WAID,sBAAaR,UAAb,EAAyBkB,WAAzB,EAAsCC,UAAtC,EAAkD;AAE9C,eAASC,YAAT,CAAsBpB,UAAtB,EAAkCkB,WAAlC,EAA+CC,UAA/C,EAA2D;AACvD,YAAInB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAArB,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,MAA8D,GADrE,EAC0E;AACtEmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAtD,IAA2D,GAA3D;AACAkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,IAA4D,GAA5D;AACH;;AACD,YAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAArB,IAA0BA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAA/C,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,MAAkE,GADzE,EAC8E;AAC1EmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA1D,IAA+D,GAA/D;AACAkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,IAAgE,GAAhE;AACH;;AACD,YAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAArB,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,MAA8D,GADrE,EAC0E;AACtEkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,IAA4D,GAA5D;AACAmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAApD,IAA2D,GAA3D;AACH;;AACD,YAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAArB,IAA0BA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAA9C,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,MAAkE,GADzE,EAC8E;AAC1EkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,IAAgE,GAAhE;AACAmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA1D,IAA+D,GAA/D;AACH;;AACD,YAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,MAA8D,GADrE,EAC0E;AACtEmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAtD,IAA2D,GAA3D;AACAkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,IAA4D,GAA5D;AACH;;AACD,YAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IAA0BA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAA9C,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,MAAkE,GADzE,EAC8E;AAC1EmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA1D,IAA+D,GAA/D;AACAkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,IAAgE,GAAhE;AACH;;AACD,YAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,MAA8D,GADrE,EAC0E;AACtEkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,IAA4D,GAA5D;AACAmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAApD,IAA2D,GAA3D;AACH;;AACD,YAAIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IAA0BA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAA/C,IACGkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,MAAkE,GADzE,EAC8E;AAC1EmB,UAAAA,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA1D,IAA+D,GAA/D;AACAkB,UAAAA,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAA3D,IAAgE,GAAhE;AACH;AAEJ;;AAED,UAAIqB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACtB,YAAI5B,MAAM,GAAG,IAAb;;AACA,YAAIO,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAAxB,EAA4B;AAAE,cAAI,EAAEkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,MAA8D,GAA9D,IAC7BkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,MAA8D,GADnC,CAAJ,EAC6CP,MAAM,GAAG,KAAT;AAAiB;;AAC5F,YAAIO,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAAzB,EAA4B;AAAE,cAAI,EAAEkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,MAA8D,GAA9D,IAC7BkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAxC,EAA2CA,UAAU,CAAC,CAAD,CAArD,MAA8D,GADnC,CAAJ,EAC6CP,MAAM,GAAG,KAAT;AAAiB;;AAC5F,YAAIO,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAAxB,EAA4B;AAAE,cAAI,EAAEkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,MAA8D,GAA9D,IAC7BkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,MAA8D,GADnC,CAAJ,EAC6CP,MAAM,GAAG,KAAT;AAAiB;;AAC5F,YAAIO,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAAzB,EAA4B;AAAE,cAAI,EAAEkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,MAA8D,GAA9D,IAC7BkB,WAAW,CAACnC,WAAZ,CAAwBiB,UAAU,CAAC,CAAD,CAAlC,EAAuCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvD,MAA8D,GADnC,CAAJ,EAC6CP,MAAM,GAAG,KAAT;AAAiB;;AAC5F,eAAOA,MAAP;AACH,OAXD,CA9C8C,CA2D9C;;;AACA,UAAI6B,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEvB,YAAMtB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IAA0BmB,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAApD,MAA6D,GAAxF,IACGA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAArB,IAA0BmB,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,EAA0CA,UAAU,CAAC,CAAD,CAApD,MAA6D,GAD/F,EACsG;AAAA,cAIzFuB,WAJyF,GAIlG,SAASA,WAAT,GAAuB;AACnB,iBAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAJ,IACbR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAhB,GAAoB,EADP,IAEbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAvC,EAA0CR,UAAU,CAAC,CAAD,CAApD,MAA6D,GAFhE,EAEqEQ,CAAC,EAFtE,EAE0E;AACtEgB,cAAAA,QAAQ,GAAG,CAACxB,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAjB,EAAoBR,UAAU,CAAC,CAAD,CAA9B,CAAX;AACH;AACJ,WAViG;;AAAA,cAYzFyB,WAZyF,GAYlG,SAASA,WAAT,GAAwB;AACpB,iBAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAJ,IACbR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAhB,GAAoB,CAAC,CADR,IAEbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAvC,EAA0CR,UAAU,CAAC,CAAD,CAApD,MAA6D,GAFhE,EAEqEQ,CAAC,EAFtE,EAE0E;AACtEkB,cAAAA,QAAQ,GAAG,CAAC1B,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAjB,EAAoBR,UAAU,CAAC,CAAD,CAA9B,CAAX;AACH;AACJ,WAlBiG;;AAElG,cAAIwB,QAAJ,EAAcE,QAAd;AAkBAH,UAAAA,WAAW;AACXE,UAAAA,WAAW;;AAEX,cAAIE,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACnC,gBAAI,CAACD,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAf,IAAoB,CAAC,CAAzB,EAA4B;AACxB,qBAAOR,WAAW,CAACnC,WAAZ,CAAwB2C,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAtC,EAAyCA,QAAQ,CAAC,CAAD,CAAjD,MAA0D,GAAjE;AACH,aAFD,MAEO,OAAOR,WAAW,CAACnC,WAAZ,CAAwB2C,QAAQ,CAAC,CAAD,CAAhC,EAAqCA,QAAQ,CAAC,CAAD,CAA7C,MAAsD,GAA7D;AACV,WAJD;;AAMA,cAAIE,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAChC,gBAAI,CAACJ,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAf,IAAoB,EAAxB,EAA4B;AACxB,qBAAON,WAAW,CAACnC,WAAZ,CAAwByC,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAtC,EAAyCA,QAAQ,CAAC,CAAD,CAAjD,MAA0D,GAAjE;AACH,aAFD,MAEO,OAAON,WAAW,CAACnC,WAAZ,CAAwByC,QAAQ,CAAC,CAAD,CAAhC,EAAqCA,QAAQ,CAAC,CAAD,CAA7C,MAAsD,GAA7D;AACV,WAJD;;AAMA,iBAAOI,uBAAuB,MAAMD,0BAA0B,EAA9D;AACH;AAEJ,OAzCD,CA5D8C,CAuG9C;;;AACA,UAAIE,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAEzB,YAAM7B,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IACCmB,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAtD,MAA6D,GAD/D,IAEIA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAAC,CAArB,IACEmB,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAtD,MAA6D,GAHxE,EAG+E;AAAA,cAIlEuB,WAJkE,GAI3E,SAASA,WAAT,GAAuB;AACnB,iBAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAJ,IACbR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAhB,GAAoB,EADP,IAEbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAtD,MAA6D,GAFhE,EAEqEA,CAAC,EAFtE,EAE0E;AACtEgB,cAAAA,QAAQ,GAAG,CAACxB,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAhC,CAAX;AACH;AACJ,WAV0E;;AAAA,cAYlEiB,WAZkE,GAY3E,SAASA,WAAT,GAAuB;AACnB,iBAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAJ,IACbR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAhB,GAAoB,CAAC,CADR,IAEbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAtD,MAA6D,GAFhE,EAEqEA,CAAC,EAFtE,EAE0E;AACtEkB,cAAAA,QAAQ,GAAG,CAAC1B,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAhC,CAAX;AACH;AACJ,WAlB0E;;AAE3E,cAAIgB,QAAJ,EAAcE,QAAd;AAkBAD,UAAAA,WAAW;AACXF,UAAAA,WAAW;AAEX,iBAAOL,WAAW,CAACnC,WAAZ,CAAwByC,QAAQ,CAAC,CAAD,CAAhC,EAAqCA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAnD,MAA0D,GAA1D,IAAiEN,WAAW,CAACnC,WAAZ,CAAwB2C,QAAQ,CAAC,CAAD,CAAhC,EAAqCA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAnD,MAA0D,GAAlI;AACH;AAEJ,OA/BD;;AAiCA,UAAIJ,cAAc,EAAlB,EAAsB;AAElB,aAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAJ,IAASR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAhB,GAAoB,EAA7B,IACbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAvC,EAA0CR,UAAU,CAAC,CAAD,CAApD,MAA6D,GADhE,EACqEQ,CAAC,EADtE,EAC0E;AACtEY,UAAAA,YAAY,CAAC,CAACpB,UAAU,CAAC,CAAD,CAAV,GAAgBQ,CAAjB,EAAoBR,UAAU,CAAC,CAAD,CAA9B,CAAD,EAAqCkB,WAArC,EAAkDC,UAAlD,CAAZ;AACH;;AAED,aAAK,IAAIX,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,CAAJ,IAASR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,EAAhB,GAAoB,CAAC,CAA9B,IACbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAV,GAAgBQ,EAAvC,EAA0CR,UAAU,CAAC,CAAD,CAApD,MAA6D,GADhE,EACqEQ,EAAC,EADtE,EAC0E;AACtEY,UAAAA,YAAY,CAAC,CAACpB,UAAU,CAAC,CAAD,CAAV,GAAgBQ,EAAjB,EAAoBR,UAAU,CAAC,CAAD,CAA9B,CAAD,EAAqCkB,WAArC,EAAkDC,UAAlD,CAAZ;AACH;AAEJ;;AAED,UAAIU,gBAAgB,EAApB,EAAwB;AAEpB,aAAK,IAAIrB,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAAJ,IAASR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,GAAhB,GAAoB,EAA7B,IACbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAeQ,GAArD,MAA4D,GAD/D,EACoEA,GAAC,EADrE,EACyE;AACrEY,UAAAA,YAAY,CAAC,CAACpB,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAAV,GAAgBQ,GAAhC,CAAD,EAAqCU,WAArC,EAAkDC,UAAlD,CAAZ;AACH;;AAED,aAAK,IAAIX,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAAJ,IAASR,UAAU,CAAC,CAAD,CAAV,GAAgBQ,GAAhB,GAAoB,CAAC,CAA9B,IACbW,UAAU,CAACpC,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAV,GAAgBQ,GAAtD,MAA6D,GADhE,EACqEA,GAAC,EADtE,EAC0E;AACtEY,UAAAA,YAAY,CAAC,CAACpB,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAAV,GAAiBQ,GAAjC,CAAD,EAAsCU,WAAtC,EAAmDC,UAAnD,CAAZ;AACH;AAEJ;;AAED,UAAIE,aAAa,EAAjB,EAAqB;AACjBD,QAAAA,YAAY,CAACpB,UAAD,EAAakB,WAAb,EAA0BC,UAA1B,CAAZ;AACH;AACJ;;;WAED,oBAAWW,KAAX,EAAkB;AACd,UAAIrC,MAAM,GAAG,IAAb;;AACA,WAAK,IAAIQ,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGtB,WAAxB,EAAqCsB,GAAG,EAAxC,EAA4C;AACxC,aAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGvB,WAAxB,EAAqCuB,GAAG,EAAxC,EAA4C;AACxC,cAAI4B,KAAK,CAAC/C,WAAN,CAAkBkB,GAAlB,EAAuBC,GAAvB,MAAgC,GAApC,EAAyCT,MAAM,GAAG,KAAT;AAC5C;AACJ;;AACD,UAAIA,MAAJ,EAAY;AACR,6BAAAZ,UAAU,GAAG,IAAb;AACH;AACJ;;;;EAvTqBC;;IA0TpBiD;;;;;AAEF,wBAAc;AAAA;;AAAA;AAEb;;;;WAED,qBAAYC,KAAZ,EAAmB;AACf,UAAIpC,WAAW,GAAG,KAAKqC,uBAAL,CAA6BD,KAA7B,CAAlB;;AAEA,cAAQE,OAAO,CAACnD,WAAR,CAAoBa,WAAW,CAAC,CAAD,CAA/B,EAAoCA,WAAW,CAAC,CAAD,CAA/C,CAAR;AACI,aAAK,GAAL;AACIsC,UAAAA,OAAO,CAACnD,WAAR,CAAoBa,WAAW,CAAC,CAAD,CAA/B,EAAoCA,WAAW,CAAC,CAAD,CAA/C,IAAsD,GAAtD;AACAuC,UAAAA,eAAe,CAACpD,WAAhB,CAA4Ba,WAAW,CAAC,CAAD,CAAvC,EAA4CA,WAAW,CAAC,CAAD,CAAvD,IAA8D,GAA9D;AACAsC,UAAAA,OAAO,CAACE,wBAAR;AACA;;AACJ,aAAK,GAAL;AACIF,UAAAA,OAAO,CAACnD,WAAR,CAAoBa,WAAW,CAAC,CAAD,CAA/B,EAAoCA,WAAW,CAAC,CAAD,CAA/C,IAAsD,GAAtD;AACAuC,UAAAA,eAAe,CAACpD,WAAhB,CAA4Ba,WAAW,CAAC,CAAD,CAAvC,EAA4CA,WAAW,CAAC,CAAD,CAAvD,IAA8D,GAA9D;AACA,eAAKyC,YAAL,CAAkBzC,WAAlB,EAA+BsC,OAA/B,EAAwCC,eAAxC;AACA;;AACJ,aAAK,GAAL;AACI;;AACJ,aAAK,GAAL;AACI;;AACJ;AACIG,UAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AAjBR;;AAqBA,WAAKC,UAAL,CAAgBL,OAAhB;AACH;;;;EA/BoBpC;;IAmCnB0C;;;;;AAEF,qBAAc;AAAA;;AAAA;AAEb;;;;WAED,oCAA2B;AACvB,UAAIxC,UAAU,GAAG,KAAKU,0BAAL,EAAjB;;AACA,cAAQ+B,UAAU,CAAC1D,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAhD,CAAR;AACI,aAAK,GAAL;AACIyC,UAAAA,UAAU,CAAC1D,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAhD,IAAuD,GAAvD;AACA;;AACJ,aAAK,GAAL;AACIyC,UAAAA,UAAU,CAAC1D,WAAX,CAAuBiB,UAAU,CAAC,CAAD,CAAjC,EAAsCA,UAAU,CAAC,CAAD,CAAhD,IAAuD,GAAvD;AACA0C,UAAAA,YAAY,CAAC3D,WAAb,CAAyBiB,UAAU,CAAC,CAAD,CAAnC,EAAwCA,UAAU,CAAC,CAAD,CAAlD,IAAyD,GAAzD;AACA,eAAKqC,YAAL,CAAkBrC,UAAlB,EAA8ByC,UAA9B,EAA0CC,YAA1C;AACAR,UAAAA,OAAO,CAACE,wBAAR;AACA;;AACJ,aAAK,GAAL;AACIF,UAAAA,OAAO,CAACE,wBAAR;AACA;;AACJ,aAAK,GAAL;AACIF,UAAAA,OAAO,CAACE,wBAAR;AACA;;AACJ;AACIE,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACA;AAlBR;;AAoBA,WAAKC,UAAL,CAAgBE,UAAhakB3C;;AAmbf,IAAM2C,UAAU,GAAG,IAAIV,UAAJ,EAAnB;;AACA,IAAMG,OAAO,GAAG,IAAIM,OAAJ,EAAhB;;AACA,IAAML,eAAe,GAAG,IAAIrD,KAAJ,EAAxB;;AACP,IAAM4D,YAAY,GAAG,IAAI5D,KAAJ,EAArB;;;AClzBA,IAAI6D,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBxD,IAAtB,CAA2B2D,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,UAAUD,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBzD,IAAvB,CAA4B2D,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIW,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGf,MAAM,CAACC,MAAP,CAAcc,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIR,IAAI,GAAGkB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACjB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACoB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACArB,MAAAA,IAAI,CAACsB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIrB,IAAI,CAACsB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACJ,IAAN,KAAe,KAAf,IAAwBI,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEAnC,QAAAA,IAAI,CAACsB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAhB,QAAAA,cAAc,CAACe,OAAf,CAAuB,UAAUc,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIxB,QAAQ,CAAC0B,MAAb,EAAqB;AAAE;AAC5B1B,QAAAA,QAAQ,CAAC0B,MAAT;AACD;AACF;;AAED,QAAIvC,IAAI,CAACoB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAACyB,KAAH;;AACAzB,MAAAA,EAAE,CAAC0B,OAAH,GAAa,YAAY;AACvB5B,QAAAA,QAAQ,CAAC0B,MAAT;AACD,OAFD;AAGD;;AAED,QAAIvC,IAAI,CAACoB,IAAL,KAAc,gBAAlB,EAAoC;AAClCc,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI3C,IAAI,CAACoB,IAAL,KAAc,OAAlB,EAA2B;AACzBc,MAAAA,OAAO,CAACU,KAAR,CAAc,kBAAkB5C,IAAI,CAAC4C,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C7C,IAAI,CAAC4C,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAAChD,IAAD,CAAhC;AACAiD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB5D,UAAxB,CAAd;;AACA,MAAIuD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4BhD,IAA5B,EAAkC;AAChC,MAAI+C,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAACjB,EAAR,GAAatC,UAAb,CAFgC,CAIhC;;AACA,MAAIqD,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoBxD,IAAI,CAAC4C,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuBxD,IAAI,CAAC4C,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoB/D,MAApB,EAA4BmC,EAA5B,EAAgC;AAC9B,MAAI6B,OAAO,GAAGhE,MAAM,CAACgE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKjC,EAAR,IAAejG,KAAK,CAACmI,OAAN,CAAcD,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAChI,MAAJ,GAAa,CAAd,CAAH,KAAwB+F,EAAjE,EAAsE;AACpE8B,QAAAA,OAAO,CAAClH,IAAR,CAAamH,CAAb;AACD;AACF;AACF;;AAED,MAAIlE,MAAM,CAACc,MAAX,EAAmB;AACjBmD,IAAAA,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAeP,UAAU,CAAC/D,MAAM,CAACc,MAAR,EAAgBqB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO8B,OAAP;AACD;;AAED,SAASxB,QAAT,CAAkBzC,MAAlB,EAA0B6B,KAA1B,EAAiC;AAC/B,MAAImC,OAAO,GAAGhE,MAAM,CAACgE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACnC,MAAM,CAACc,MAAjC,EAAyC;AACvC,QAAIJ,EAAE,GAAG,IAAI6D,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C1C,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACkC,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAtB;AACA6B,IAAAA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAACzB,EAAD,EAAKmB,KAAK,CAAC2C,IAAX,CAApB;AACD,GAJD,MAIO,IAAIxE,MAAM,CAACc,MAAX,EAAmB;AACxB2B,IAAAA,QAAQ,CAACzC,MAAM,CAACc,MAAR,EAAgBe,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBhC,MAAxB,EAAgCmC,EAAhC,EAAoC;AAClC,MAAI6B,OAAO,GAAGhE,MAAM,CAACgE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC7B,EAAD,CAAR,IAAgBnC,MAAM,CAACc,MAA3B,EAAmC;AACjC,WAAOkB,cAAc,CAAChC,MAAM,CAACc,MAAR,EAAgBqB,EAAhB,CAArB;AACD;;AAED,MAAIvB,aAAa,CAACuB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDvB,EAAAA,aAAa,CAACuB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIsC,MAAM,GAAGzE,MAAM,CAAC0E,KAAP,CAAavC,EAAb,CAAb;AAEAtB,EAAAA,cAAc,CAAC9D,IAAf,CAAoB,CAACiD,MAAD,EAASmC,EAAT,CAApB;;AAEA,MAAIsC,MAAM,IAAIA,MAAM,CAACrE,GAAjB,IAAwBqE,MAAM,CAACrE,GAAP,CAAWG,gBAAX,CAA4BnE,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAO2H,UAAU,CAAC9B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqCwC,IAArC,CAA0C,UAAUxC,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsB3C,MAAtB,EAA8BmC,EAA9B,EAAkC;AAChC,MAAIsC,MAAM,GAAGzE,MAAM,CAAC0E,KAAP,CAAavC,EAAb,CAAb;AACAnC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAImE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACrE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAImE,MAAM,IAAIA,MAAM,CAACrE,GAAjB,IAAwBqE,MAAM,CAACrE,GAAP,CAAWI,iBAAX,CAA6BpE,MAAzD,EAAiE;AAC/DqI,IAAAA,MAAM,CAACrE,GAAP,CAAWI,iBAAX,CAA6BoB,OAA7B,CAAqC,UAAUgD,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC5E,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAAC0E,KAAP,CAAavC,EAAb,CAAP;AACAnC,EAAAA,MAAM,CAACmC,EAAD,CAAN;AAEAsC,EAAAA,MAAM,GAAGzE,MAAM,CAAC0E,KAAP,CAAavC,EAAb,CAAT;;AACA,MAAIsC,MAAM,IAAIA,MAAM,CAACrE,GAAjB,IAAwBqE,MAAM,CAACrE,GAAP,CAAWG,gBAAX,CAA4BnE,MAAxD,EAAgE;AAC9DqI,IAAAA,MAAM,CAACrE,GAAP,CAAWG,gBAAX,CAA4BqB,OAA5B,CAAoC,UAAUgD,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"NewNavalBattle.e9310c80.js","sourceRoot":"..","sourcesContent":["\r\n\r\nconst _RESOLUTION = 10;\r\nconst _FLEET = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1];\r\nexport let gameIsOver = false;\r\nclass Field {\r\n\r\n    constructor() {\r\n        this.battleField = Array.from({length: _RESOLUTION},\r\n            () => Array.from({length: _RESOLUTION},\r\n                () => ('@')));\r\n    }\r\n\r\n    getRandomIntInclusive(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\r\n    }\r\n\r\n    generateRandomCoordinateXY(result) {\r\n        result = [this.getRandomIntInclusive(0, 9), this.getRandomIntInclusive(0, 9)]\r\n        return result;\r\n    }\r\n\r\n    convertNumberToCoordArr(number) {\r\n        let coordinates = [];\r\n        coordinates.push(Math.floor(number / _RESOLUTION), number % _RESOLUTION);\r\n        return coordinates;\r\n    }\r\n}\r\n\r\nclass PlayerField extends Field {\r\n\r\n    constructor() {\r\n        super();\r\n        this._FLEET = _FLEET;\r\n        this.placeShipsOnField();\r\n    }\r\n\r\n    isSurroundingCellsFree(coordinate) {\r\n        let row = coordinate[0];\r\n        let col = coordinate[1];\r\n\r\n        if (row === 0) {\r\n            return this.battleField[row][col - 1] === '@'\r\n                && this.battleField[row][col + 1] === '@'\r\n                && this.battleField[row + 1][col + 1] === '@'\r\n                && this.battleField[row + 1][col] === '@'\r\n                && this.battleField[row + 1][col - 1] === '@'\r\n        }\r\n\r\n        if (row === 9) {\r\n            return this.battleField[row][col - 1] === '@'\r\n                && this.battleField[row - 1][col - 1] === '@'\r\n                && this.battleField[row - 1][col] === '@'\r\n                && this.battleField[row - 1][col + 1] === '@'\r\n                && this.battleField[row][col + 1] === '@'\r\n        }\r\n\r\n        if (col === 0) {\r\n            return this.battleField[row - 1][col] === '@'\r\n                && this.battleField[row - 1][col + 1] === '@'\r\n                && this.battleField[row][col + 1] === '@'\r\n                && this.battleField[row + 1][col + 1] === '@'\r\n                && this.battleField[row + 1][col] === '@'\r\n        }\r\n\r\n        if (col === 9) {\r\n            return this.battleField[row][col - 1] === '@'\r\n                && this.battleField[row - 1][col - 1] === '@'\r\n                && this.battleField[row - 1][col] === '@'\r\n                && this.battleField[row + 1][col] === '@'\r\n                && this.battleField[row + 1][col - 1] === '@'\r\n        }\r\n\r\n        return this.battleField[row][col - 1] === '@'\r\n            && this.battleField[row - 1][col - 1] === '@'\r\n            && this.battleField[row - 1][col] === '@'\r\n            && this.battleField[row - 1][col + 1] === '@'\r\n            && this.battleField[row][col + 1] === '@'\r\n            && this.battleField[row + 1][col + 1] === '@'\r\n            && this.battleField[row + 1][col] === '@'\r\n            && this.battleField[row + 1][col - 1] === '@'\r\n\r\n    }\r\n\r\n    isCanBeAttachedVertical(shipLength, startCoordinate) {\r\n\r\n        let row = startCoordinate[0];\r\n        let col = startCoordinate[1];\r\n        let result = true;\r\n        let isWithinTheGameField = (row + shipLength < _RESOLUTION);\r\n        let isOneDeckCanBePlaced = this.isSurroundingCellsFree(startCoordinate) && (this.battleField[row][col] === '@');\r\n        if (!isWithinTheGameField) return false;\r\n        if (shipLength === 1) return isOneDeckCanBePlaced;\r\n\r\n        for (let i = 0; i < shipLength; i++) {\r\n            if (this.battleField[row + i][col] !== '@' || !this.isSurroundingCellsFree([row + i, col])) {\r\n                result = false;\r\n            }\r\n        }\r\n\r\n        return result && isWithinTheGameField;\r\n    }\r\n\r\n    isCanBeAttachedHorizontal(shipLength, startCoordinate) {\r\n\r\n        let row = startCoordinate[0];\r\n        let col = startCoordinate[1];\r\n        let result = true;\r\n        let isWithinTheGameField = (col + shipLength < _RESOLUTION);\r\n        let isOneDeckCanBePlaced = this.isSurroundingCellsFree([row, col]) && (this.battleField[row][col] === '@');\r\n        if (!isWithinTheGameField) return false;\r\n        if (shipLength === 1) return isOneDeckCanBePlaced;\r\n\r\n\r\n        for (let i = 0; i < shipLength; i++) {\r\n            if (this.battleField[row][col + i] !== '@' || !this.isSurroundingCellsFree([row, col + i])) {\r\n                result = false;\r\n            }\r\n        }\r\n\r\n        return result && isWithinTheGameField;\r\n    }\r\n\r\n    attachShip(shipLength) {\r\n        let randomCoordinate = [];\r\n        randomCoordinate = this.generateRandomCoordinateXY(randomCoordinate);\r\n        let canBeAttachedVertical = false;\r\n        let canBeAttachedHorizontal = false;\r\n\r\n        let attachVertical = () => {\r\n            for (let i = 0; i < shipLength; i++) {\r\n                this.battleField[randomCoordinate[0] + i][randomCoordinate[1]] = '#';\r\n            }\r\n        }\r\n\r\n        let attachHorizontal = () => {\r\n            for (let i = 0; i < shipLength; i++) {\r\n                this.battleField[randomCoordinate[0]][randomCoordinate[1] + i] = '#';\r\n            }\r\n        }\r\n\r\n        for (; !(canBeAttachedVertical || canBeAttachedHorizontal);) {\r\n            randomCoordinate = this.generateRandomCoordinateXY(randomCoordinate);\r\n            canBeAttachedVertical = this.isCanBeAttachedVertical(shipLength, randomCoordinate);\r\n            canBeAttachedHorizontal = this.isCanBeAttachedHorizontal(shipLength, randomCoordinate);\r\n        }\r\n\r\n        canBeAttachedVertical && canBeAttachedHorizontal ? this.getRandomIntInclusive(0, 1) === 1 ? attachVertical() : attachHorizontal() : canBeAttachedVertical ? attachVertical() : attachHorizontal();\r\n\r\n\r\n    }\r\n\r\n    placeShipsOnField() {\r\n        for (let i = 0; i < this._FLEET.length; i++) {\r\n            this.attachShip(this._FLEET[i]);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    markSunkShip(coordinate, sourceField, guessField) {\r\n\r\n        function markSunkDeck(coordinate, sourceField, guessField) {\r\n            if (coordinate[1] - 1 > -1\r\n                && sourceField.battleField[coordinate[0]][coordinate[1] - 1] === '@') {\r\n                guessField.battleField[coordinate[0]][coordinate[1] - 1] = '*';\r\n                sourceField.battleField[coordinate[0]][coordinate[1] - 1] = '*';\r\n            }\r\n            if (coordinate[0] - 1 > -1 && coordinate[1] - 1 > -1\r\n                && sourceField.battleField[coordinate[0] - 1][coordinate[1] - 1] === '@') {\r\n                guessField.battleField[coordinate[0] - 1][coordinate[1] - 1] = '*';\r\n                sourceField.battleField[coordinate[0] - 1][coordinate[1] - 1] = '*';\r\n            }\r\n            if (coordinate[0] - 1 > -1\r\n                && sourceField.battleField[coordinate[0] - 1][coordinate[1]] === '@') {\r\n                sourceField.battleField[coordinate[0] - 1][coordinate[1]] = '*';\r\n                guessField.battleField[coordinate[0] - 1][coordinate[1]] = '*';\r\n            }\r\n            if (coordinate[0] - 1 > -1 && coordinate[1] + 1 < 10\r\n                && sourceField.battleField[coordinate[0] - 1][coordinate[1] + 1] === '@') {\r\n                sourceField.battleField[coordinate[0] - 1][coordinate[1] + 1] = '*';\r\n                guessField.battleField[coordinate[0] - 1][coordinate[1] + 1] = '*';\r\n            }\r\n            if (coordinate[1] + 1 < 10\r\n                && sourceField.battleField[coordinate[0]][coordinate[1] + 1] === '@') {\r\n                guessField.battleField[coordinate[0]][coordinate[1] + 1] = '*';\r\n                sourceField.battleField[coordinate[0]][coordinate[1] + 1] = '*';\r\n            }\r\n            if (coordinate[0] + 1 < 10 && coordinate[1] + 1 < 10\r\n                && sourceField.battleField[coordinate[0] + 1][coordinate[1] + 1] === '@') {\r\n                guessField.battleField[coordinate[0] + 1][coordinate[1] + 1] = '*';\r\n                sourceField.battleField[coordinate[0] + 1][coordinate[1] + 1] = '*';\r\n            }\r\n            if (coordinate[0] + 1 < 10\r\n                && sourceField.battleField[coordinate[0] + 1][coordinate[1]] === '@') {\r\n                sourceField.battleField[coordinate[0] + 1][coordinate[1]] = '*';\r\n                guessField.battleField[coordinate[0] + 1][coordinate[1]] = '*';\r\n            }\r\n            if (coordinate[0] + 1 < 10 && coordinate[1] - 1 > -1\r\n                && sourceField.battleField[coordinate[0] + 1][coordinate[1] - 1] === '@') {\r\n                guessField.battleField[coordinate[0] + 1][coordinate[1] - 1] = '*';\r\n                sourceField.battleField[coordinate[0] + 1][coordinate[1] - 1] = '*';\r\n            }\r\n\r\n        }\r\n\r\n        let isOneDeckShip = () => {\r\n            let result = true;\r\n            if (coordinate[0] + 1 < 10) { if (!(sourceField.battleField[coordinate[0] + 1][coordinate[1]] === '@'\r\n                || sourceField.battleField[coordinate[0] + 1][coordinate[1]] === '*')) result = false; }\r\n            if (coordinate[0] - 1 > -1) { if (!(sourceField.battleField[coordinate[0] - 1][coordinate[1]] === '@'\r\n                || sourceField.battleField[coordinate[0] - 1][coordinate[1]] === '*')) result = false; }\r\n            if (coordinate[1] + 1 < 10) { if (!(sourceField.battleField[coordinate[0]][coordinate[1] + 1] === '@'\r\n                || sourceField.battleField[coordinate[0]][coordinate[1] + 1] === '*')) result = false; }\r\n            if (coordinate[1] - 1 > -1) { if (!(sourceField.battleField[coordinate[0]][coordinate[1] - 1] === '@'\r\n                || sourceField.battleField[coordinate[0]][coordinate[1] - 1] === '*')) result = false; }\r\n            return result;\r\n        }\r\n\r\n        //vert\r\n        let isSunkVertical = () => {\r\n\r\n            if ( (coordinate[0] + 1 < 10 && guessField.battleField[coordinate[0] + 1][coordinate[1]] === 'X')\r\n                || (coordinate[0] - 1 > -1 && guessField.battleField[coordinate[0] - 1][coordinate[1]] === 'X') ) {\r\n\r\n                let topPoint, lowPoint;\r\n\r\n                function setTopPoint() {\r\n                    for (let i = 0; i < 4\r\n                    && coordinate[0] + i < 10\r\n                    && guessField.battleField[coordinate[0] + i][coordinate[1]] === 'X'; i++) {\r\n                        topPoint = [coordinate[0] + i, coordinate[1]];\r\n                    }\r\n                }\r\n\r\n                function setLowPoint () {\r\n                    for (let i = 0; i < 4\r\n                    && coordinate[0] - i > -1\r\n                    && guessField.battleField[coordinate[0] - i][coordinate[1]] === 'X'; i++) {\r\n                        lowPoint = [coordinate[0] - i, coordinate[1]];\r\n                    }\r\n                }\r\n\r\n                setTopPoint();\r\n                setLowPoint();\r\n\r\n                let isCompletelySunkBottomSide = () => {\r\n                    if ([lowPoint[0] - 1] > -1) {\r\n                        return sourceField.battleField[lowPoint[0] - 1][lowPoint[1]] !== '#';\r\n                    } else return sourceField.battleField[lowPoint[0]][lowPoint[1]] === 'X';\r\n                }\r\n\r\n                let isCompletelySunkTopSide = () => {\r\n                    if ([topPoint[0] + 1] < 10) {\r\n                        return sourceField.battleField[topPoint[0] + 1][topPoint[1]] !== '#';\r\n                    } else return sourceField.battleField[topPoint[0]][topPoint[1]] === 'X';\r\n                }\r\n\r\n                return isCompletelySunkTopSide() && isCompletelySunkBottomSide();\r\n            }\r\n\r\n        }\r\n\r\n        //horizontal\r\n        let isSunkHorizontal = () => {\r\n\r\n            if ( (coordinate[1] + 1 < 10\r\n                && guessField.battleField[coordinate[0]][coordinate[1] + 1] === 'X')\r\n                || ( coordinate[1] - 1 > -1\r\n                    && guessField.battleField[coordinate[0]][coordinate[1] - 1] === 'X') ) {\r\n\r\n                let topPoint, lowPoint;\r\n\r\n                function setTopPoint() {\r\n                    for (let i = 0; i < 4\r\n                    && coordinate[1] + i < 10\r\n                    && guessField.battleField[coordinate[0]][coordinate[1] + i] === 'X'; i++) {\r\n                        topPoint = [coordinate[0], coordinate[1] + i];\r\n                    }\r\n                }\r\n\r\n                function setLowPoint() {\r\n                    for (let i = 0; i < 4\r\n                    && coordinate[1] - i > -1\r\n                    && guessField.battleField[coordinate[0]][coordinate[1] - i] === 'X'; i++) {\r\n                        lowPoint = [coordinate[0], coordinate[1] - i];\r\n                    }\r\n                }\r\n\r\n                setLowPoint();\r\n                setTopPoint();\r\n\r\n                return sourceField.battleField[topPoint[0]][topPoint[1] + 1] !== '#' && sourceField.battleField[lowPoint[0]][lowPoint[1] - 1] !== '#';\r\n            }\r\n\r\n        }\r\n\r\n        if (isSunkVertical()) {\r\n\r\n            for (let i = 0; i < 4 && coordinate[0] + i < 10\r\n            && guessField.battleField[coordinate[0] + i][coordinate[1]] === 'X'; i++) {\r\n                markSunkDeck([coordinate[0] + i, coordinate[1]], sourceField, guessField)\r\n            }\r\n\r\n            for (let i = 0; i < 4 && coordinate[0] - i > -1\r\n            && guessField.battleField[coordinate[0] - i][coordinate[1]] === 'X'; i++) {\r\n                markSunkDeck([coordinate[0] - i, coordinate[1]], sourceField, guessField)\r\n            }\r\n\r\n        }\r\n\r\n        if (isSunkHorizontal()) {\r\n\r\n            for (let i = 0; i < 4 && coordinate[1] + i < 10\r\n            && guessField.battleField[coordinate[0]][coordinate[1]+ i] === 'X'; i++) {\r\n                markSunkDeck([coordinate[0], coordinate[1] + i], sourceField, guessField)\r\n            }\r\n\r\n            for (let i = 0; i < 4 && coordinate[1] - i > -1\r\n            && guessField.battleField[coordinate[0]][coordinate[1] - i] === 'X'; i++) {\r\n                markSunkDeck([coordinate[0], coordinate[1]  - i], sourceField, guessField)\r\n            }\r\n\r\n        }\r\n\r\n        if (isOneDeckShip()) {\r\n            markSunkDeck(coordinate, sourceField, guessField);\r\n        }\r\n    }\r\n\r\n    isGameOver(field) {\r\n        let result = true;\r\n        for (let row = 0; row < _RESOLUTION; row++) {\r\n            for (let col = 0; col < _RESOLUTION; col++) {\r\n                if (field.battleField[row][col] === '#') result = false;\r\n            }\r\n        }\r\n        if (result) {\r\n            gameIsOver = true;\r\n        }\r\n    }\r\n}\r\n\r\nclass HumanField extends PlayerField {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    humanAttack(index) {\r\n        let coordinates = this.convertNumberToCoordArr(index);\r\n\r\n        switch (aiField.battleField[coordinates[0]][coordinates[1]]) {\r\n            case '@':\r\n                aiField.battleField[coordinates[0]][coordinates[1]] = '*';\r\n                humanGuessField.battleField[coordinates[0]][coordinates[1]] = '*';\r\n                aiField.aiAttackRandomCoordinate();\r\n                break;\r\n            case '#':\r\n                aiField.battleField[coordinates[0]][coordinates[1]] = 'X';\r\n                humanGuessField.battleField[coordinates[0]][coordinates[1]] = 'X';\r\n                this.markSunkShip(coordinates, aiField, humanGuessField);\r\n                break;\r\n            case 'X':\r\n                break;\r\n            case '*':\r\n                break;\r\n            default:\r\n                alert(\"DEFAULT in humanAttack\");\r\n                break;\r\n        }\r\n\r\n\r\n        this.isGameOver(aiField);\r\n    }\r\n\r\n}\r\n\r\nclass AiField extends PlayerField {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    aiAttackRandomCoordinate() {\r\n        let coordinate = this.generateRandomCoordinateXY()\r\n        switch (humanField.battleField[coordinate[0]][coordinate[1]]) {\r\n            case '@':\r\n                humanField.battleField[coordinate[0]][coordinate[1]] = '*';\r\n                break;\r\n            case '#':\r\n                humanField.battleField[coordinate[0]][coordinate[1]] = 'X';\r\n                aIguessField.battleField[coordinate[0]][coordinate[1]] = 'X';\r\n                this.markSunkShip(coordinate, humanField, aIguessField);\r\n                aiField.aiAttackRandomCoordinate();\r\n                break;\r\n            case 'X':\r\n                aiField.aiAttackRandomCoordinate();\r\n                break;\r\n            case '*':\r\n                aiField.aiAttackRandomCoordinate();\r\n                break;\r\n            default:\r\n                alert(\"ERROR in aiAttackRandomCoordinate()\");\r\n                break;\r\n        }\r\n        this.isGameOver(humanField);\r\n\r\n    }\r\n\r\n\r\n    // processAiAttack(lastSuccessAttackCoordinate) {\r\n    //\r\n    //     let directions = []; //possible direction of attack, excluding directions leading to switching to next line and directions with already empty/hitted cells\r\n    //     const lsac = lastSuccessAttackCoordinate; //shorter form for better readability\r\n    //     let coords = []; //array of first cell coords, from a possibly attack directions\r\n    //     let possibleAttackCoords;\r\n    //\r\n    //     //is an extreme cell of line\r\n    //     function isLastCellInTheLine(coordinate) {\r\n    //         return coordinate % 10 === 0 ||           //left line\r\n    //             coordinate < 10 ||                    //top line\r\n    //             (coordinate % 10) === 9 ||            //right line\r\n    //             Math.floor(coordinate / 10) === 9; //bottom line\r\n    //     }\r\n    //\r\n    //     //get array of a possible attack directions\r\n    //     function getAttackDirections (lsac)  {\r\n    //         let directions = [];\r\n    //\r\n    //         //1. last in a line; 1 - true; 0 - false;\r\n    //         if(isLastCellInTheLine(lsac)) {\r\n    //             lsac % 10 === 0 ? directions.push(1) : directions.push(0); //left line\r\n    //             lsac < 10 ? directions.push(1) : directions.push(0); //top line\r\n    //             (lsac % 10) === 9 ? directions.push(1) : directions.push(0); //right line\r\n    //             Math.floor(lsac / 10) === 9 ? directions.push(1) : directions.push(0); //bottom line\r\n    //         }\r\n    //\r\n    //         //2. there's empty cells;\r\n    //         if (directions[0] !== 0) aIguessField.battleField[lsac - 1] === '@' ? directions[0] = 1 : directions[0] = 0; //left line\r\n    //         if (directions[1] !== 0) aIguessField.battleField[lsac - 10] === '@' ? directions[1] = 1 : directions[1] = 0; //top line\r\n    //         if (directions[2] !== 0) aIguessField.battleField[lsac + 1] === '@' ? directions[2] = 1 : directions[2] = 0; //right line\r\n    //         if (directions[3] !== 0) aIguessField.battleField[lsac + 10] === '@' ? directions[3] = 1 : directions[3] = 0; //bottom line\r\n    //\r\n    //         return directions;\r\n    //     }\r\n    //\r\n    //     directions = getAttackDirections(lsac);\r\n    //\r\n    //     //first cell coords, from a possibly attack directions\r\n    //     function getPossibleAttackCoords () {\r\n    //         directions.forEach(function(direction, index) {\r\n    //             if(direction === 1) {\r\n    //                 switch (index) {\r\n    //                     case 0: coords.push(lsac - 1); break;\r\n    //                     case 1: coords.push(lsac - 10); break;\r\n    //                     case 2: coords.push(lsac + 1); break;\r\n    //                     case 3: coords.push(lsac + 10); break;\r\n    //                     default: break;\r\n    //                 }}\r\n    //         });\r\n    //         return coords;\r\n    //     }\r\n    //\r\n    //     this.nextAttackCoords = getPossibleAttackCoords(nextAttackCoords);\r\n    // }\r\n    //\r\n    // attackVars = {\r\n    //     isThereMultideckShips: this.enemyFleet.includes(2 || 3 || 4),\r\n    //     lastSuccessAttackCoordinate: null,\r\n    //     possibleAttackCoords: [],\r\n    // };\r\n    //\r\n    // isShipSunk() {\r\n    //     let coordsToCompare = [];\r\n    //     let result = true;\r\n    //\r\n    //\r\n    //         //left line\r\n    //         for (let i = 1; humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - i] !== '@' && i < 4; i++) {\r\n    //             coordsToCompare.push(this.attackVars.lastSuccessAttackCoordinate - i);\r\n    //         }\r\n    //\r\n    //\r\n    //\r\n    //         //right line\r\n    //         for (let i = 1; humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + i] !== '@' && i < 4; i++) {\r\n    //             coordsToCompare.push(this.attackVars.lastSuccessAttackCoordinate + i);\r\n    //         }\r\n    //\r\n    //\r\n    //\r\n    //         for (let i = 1; humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - i * VERTICAL_INCREMENT] !== '@' && i < 4; i++) {\r\n    //             coordsToCompare.push(this.attackVars.lastSuccessAttackCoordinate - i * VERTICAL_INCREMENT);\r\n    //         }\r\n    //\r\n    //\r\n    //\r\n    //         for (let i = 1; humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + i * VERTICAL_INCREMENT] !== '@' && i < 4; i++) {\r\n    //             coordsToCompare.push(this.attackVars.lastSuccessAttackCoordinate + i * VERTICAL_INCREMENT);\r\n    //         }\r\n    //\r\n    //     coordsToCompare = coordsToCompare.filter(coord => coord >= 0);\r\n    //     coordsToCompare = coordsToCompare.filter(coord => coord <= 99);\r\n    //\r\n    //     console.log(coordsToCompare);\r\n    //     coordsToCompare.forEach((coordinate) => {if (aIguessField.battleField[coordinate] !== 'X') result = false;});\r\n    //\r\n    //     return result;\r\n    // }\r\n    //\r\n    // aiAttacks() {\r\n    //\r\n    // if (this.attackVars.lastSuccessAttackCoordinate) {\r\n    //     console.log(this.attackVars.lastSuccessAttackCoordinate);\r\n    //     if(this.isShipSunk()) {\r\n    //         this.processSunkShip();\r\n    //     } else {\r\n    //         this.getFinishingCoords();\r\n    //         this.attackPossibleCoords();\r\n    //     }\r\n    //\r\n    //\r\n    // } else {\r\n    //     this.aiAttackRandomCoordinate();\r\n    // }\r\n    //\r\n    // }\r\n    //\r\n    // getFinishingCoords() {\r\n    //\r\n    //     //adding left direction coords\r\n    //     for (let i = 1; i < 4\r\n    //         && aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - i*HORIZONTAL_INCREMENT] === '@'\r\n    //         && (aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 10] !== 'X'\r\n    //         || aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 10] !== 'X'); i++) {\r\n    //             this.attackVars.possibleAttackCoords.push(this.attackVars.lastSuccessAttackCoordinate - i);\r\n    //         }\r\n    //\r\n    //     //adding top direction coords\r\n    //     for (let i = 1; i < 4\r\n    //     && aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + i*VERTICAL_INCREMENT] === '@'\r\n    //     && (aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 1] !== 'X'\r\n    //         || aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 1] !== 'X'); i++) {\r\n    //         this.attackVars.possibleAttackCoords.push(this.attackVars.lastSuccessAttackCoordinate + i*VERTICAL_INCREMENT);\r\n    //     }\r\n    //\r\n    //\r\n    //     //adding right direction coords\r\n    //     for (let i = 1; i < 4\r\n    //         && aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + i*HORIZONTAL_INCREMENT] === '@'\r\n    //         && (aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 10] !== 'X'\r\n    //         || aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 10] !== 'X'); i++) {\r\n    //             this.attackVars.possibleAttackCoords.push(this.attackVars.lastSuccessAttackCoordinate + i);\r\n    //         }\r\n    //\r\n    //     //adding bottom direction coords\r\n    //     for (let i = 1; i < 4\r\n    //         && aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - i*VERTICAL_INCREMENT] === '@'\r\n    //         && (aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 1] !== 'X'\r\n    //         || aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 1] !== 'X'); i++) {\r\n    //             this.attackVars.possibleAttackCoords.push(this.attackVars.lastSuccessAttackCoordinate - i*VERTICAL_INCREMENT);\r\n    //         }\r\n    //\r\n    //     console.log('finishing coords:' + this.attackVars.possibleAttackCoords)\r\n    // }\r\n    //\r\n    // processSunkShip() {\r\n    //\r\n    //     //detect ship direction\r\n    //     let lsac = this.attackVars.lastSuccessAttackCoordinate;\r\n    //     let length = 1;\r\n    //     let isVertical = null;\r\n    //\r\n    //     const surroundCoordinateWithDots = () => {\r\n    //         if\r\n    //         (\r\n    //             (humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - 1] === '@' ||\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - 1] === '*') &&\r\n    //\r\n    //             (humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 1] === '@' ||\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 1] === '*') &&\r\n    //\r\n    //             (humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - 10] === '@' ||\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - 10] === '*') &&\r\n    //\r\n    //             (humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 10] === '@' ||\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 10] === '*')\r\n    //         ) {\r\n    //\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - 1] = '*';\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 1] = '*';\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - 10] = '*';\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 10] = '*';\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate - 9] = '*';\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 11] = '*';\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 9] = '*';\r\n    //             humanField.battleField[this.attackVars.lastSuccessAttackCoordinate + 11] = '*';\r\n    //\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 1] = '*';\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 1] = '*';\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 10] = '*';\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 10] = '*';\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 11] = '*';\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 11] = '*';\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate - 9] = '*';\r\n    //             aIguessField.battleField[this.attackVars.lastSuccessAttackCoordinate + 9] = '*';\r\n    //\r\n    //         }\r\n    //     };\r\n    //\r\n    //     isVertical = () => {\r\n    //         if (aIguessField.battleField[lsac + 1] === 'X' || aIguessField.battleField[lsac - 1] === 'X') return 0;\r\n    //         if (aIguessField.battleField[lsac + 10] === 'X' || aIguessField.battleField[lsac - 10] === 'X') return 1;\r\n    //     };\r\n    //\r\n    //     const  processVertical = () => {\r\n    //\r\n    //             let extremeDeckCoordinate = () => {\r\n    //                 let result = lsac;\r\n    //                 for (let i = 0; aIguessField.battleField[lsac + i * VERTICAL_INCREMENT] === 'X'; i++) {\r\n    //                     result += i * VERTICAL_INCREMENT;\r\n    //                 } return result;\r\n    //             };\r\n    //\r\n    //             let finalDeckCoordinate = () => {\r\n    //                 let result = lsac;\r\n    //                 for (let i = 0; i < length - 1; i++) {\r\n    //                     result -= i * VERTICAL_INCREMENT;\r\n    //                 } return result;\r\n    //             };\r\n    //\r\n    //             function getSunkShipLength() {\r\n    //             for (let i = 1; aIguessField.battleField[lsac + i * VERTICAL_INCREMENT] === 'X'; i++) {\r\n    //                 length++;\r\n    //             }\r\n    //\r\n    //             for (let i = 1; aIguessField.battleField[lsac - i * VERTICAL_INCREMENT] === 'X'; i++) {\r\n    //                 length++;\r\n    //             }\r\n    //         }\r\n    //\r\n    //             function surroundShipWithDots () {\r\n    //\r\n    //                 function surroundExtremeDeckWithDots() {\r\n    //                     aIguessField.battleField[extremeDeckCoordinate - 1] = '*';\r\n    //                     aIguessField.battleField[extremeDeckCoordinate - 9] = '*';\r\n    //                     aIguessField.battleField[extremeDeckCoordinate - 10] = '*';\r\n    //                     aIguessField.battleField[extremeDeckCoordinate - 11] = '*';\r\n    //                     aIguessField.battleField[extremeDeckCoordinate + 1] = '*';\r\n    //\r\n    //                     humanField.battleField[extremeDeckCoordinate - 1] = '*';\r\n    //                     humanField.battleField[extremeDeckCoordinate - 9] = '*';\r\n    //                     humanField.battleField[extremeDeckCoordinate - 10] = '*';\r\n    //                     humanField.battleField[extremeDeckCoordinate - 11] = '*';\r\n    //                     humanField.battleField[extremeDeckCoordinate + 1] = '*';\r\n    //\r\n    //\r\n    //                 }\r\n    //\r\n    //                 function surroundFinalDeckWithDots() {\r\n    //                     aIguessField.battleField[finalDeckCoordinate - 1] = '*';\r\n    //                     aIguessField.battleField[finalDeckCoordinate + 9] = '*';\r\n    //                     aIguessField.battleField[finalDeckCoordinate + 10] = '*';\r\n    //                     aIguessField.battleField[finalDeckCoordinate + 11] = '*';\r\n    //                     aIguessField.battleField[finalDeckCoordinate + 1] = '*';\r\n    //\r\n    //                     humanField.battleField[finalDeckCoordinate - 1] = '*';\r\n    //                     humanField.battleField[finalDeckCoordinate + 9] = '*';\r\n    //                     humanField.battleField[finalDeckCoordinate + 10] = '*';\r\n    //                     humanField.battleField[finalDeckCoordinate + 11] = '*';\r\n    //                     humanField.battleField[finalDeckCoordinate + 1] = '*';\r\n    //\r\n    //                 }\r\n    //\r\n    //                 function surroundMiddleDeckWithDots() {\r\n    //                     for (let i = 0; i < length; i++) {\r\n    //                         aIguessField.battleField[extremeDeckCoordinate() - i * VERTICAL_INCREMENT + 1] = '*';\r\n    //                         aIguessField.battleField[extremeDeckCoordinate() - i * VERTICAL_INCREMENT - 1] = '*';\r\n    //\r\n    //                         humanField.battleField[extremeDeckCoordinate() - i * VERTICAL_INCREMENT + 1] = '*';\r\n    //                         humanField.battleField[extremeDeckCoordinate() - i * VERTICAL_INCREMENT - 1] = '*';\r\n    //\r\n    //                     }\r\n    //                 }\r\n    //\r\n    //                 surroundExtremeDeckWithDots();\r\n    //                 surroundFinalDeckWithDots();\r\n    //                 surroundMiddleDeckWithDots();\r\n    //             }\r\n    //\r\n    //         getSunkShipLength();\r\n    //         surroundShipWithDots ();\r\n    //     };\r\n    //\r\n    //     const  processHorizontal = () => {\r\n    //\r\n    //         let extremeDeckCoordinate = () => {\r\n    //             let result = lsac;\r\n    //             for (let i = 0; aIguessField.battleField[lsac - i] === 'X'; i++) {\r\n    //                 result += i;\r\n    //             } return result;\r\n    //         };\r\n    //\r\n    //         let finalDeckCoordinate = () => {\r\n    //             let result = lsac;\r\n    //             for (let i = 0; i < length - 1; i++) {\r\n    //                 result += i;\r\n    //             } return result;\r\n    //         };\r\n    //\r\n    //         function getSunkShipLength() {\r\n    //             for (let i = 1; aIguessField.battleField[lsac + i] === 'X'; i++) {\r\n    //                 length++;\r\n    //             }\r\n    //\r\n    //             for (let i = 1; aIguessField.battleField[lsac - i] === 'X'; i++) {\r\n    //                 length++;\r\n    //             }\r\n    //         }\r\n    //\r\n    //         function surroundShipWithDots () {\r\n    //\r\n    //             function surroundExtremeDeckWithDots() {\r\n    //                 aIguessField.battleField[extremeDeckCoordinate - 10] = '*';\r\n    //                 aIguessField.battleField[extremeDeckCoordinate - 9] = '*';\r\n    //                 aIguessField.battleField[extremeDeckCoordinate - 1] = '*';\r\n    //                 aIguessField.battleField[extremeDeckCoordinate + 9] = '*';\r\n    //                 aIguessField.battleField[extremeDeckCoordinate + 10] = '*';\r\n    //\r\n    //                 humanField.battleField[extremeDeckCoordinate - 10] = '*';\r\n    //                 humanField.battleField[extremeDeckCoordinate - 9] = '*';\r\n    //                 humanField.battleField[extremeDeckCoordinate - 1] = '*';\r\n    //                 humanField.battleField[extremeDeckCoordinate + 9] = '*';\r\n    //                 humanField.battleField[extremeDeckCoordinate + 10] = '*';\r\n    //\r\n    //             }\r\n    //\r\n    //             function surroundFinalDeckWithDots() {\r\n    //                 aIguessField.battleField[finalDeckCoordinate - 10] = '*';\r\n    //                 aIguessField.battleField[finalDeckCoordinate - 9] = '*';\r\n    //                 aIguessField.battleField[finalDeckCoordinate + 1] = '*';\r\n    //                 aIguessField.battleField[finalDeckCoordinate + 11] = '*';\r\n    //                 aIguessField.battleField[finalDeckCoordinate + 10] = '*';\r\n    //\r\n    //                 humanField.battleField[finalDeckCoordinate - 10] = '*';\r\n    //                 humanField.battleField[finalDeckCoordinate - 9] = '*';\r\n    //                 humanField.battleField[finalDeckCoordinate + 1] = '*';\r\n    //                 humanField.battleField[finalDeckCoordinate + 11] = '*';\r\n    //                 humanField.battleField[finalDeckCoordinate + 10] = '*';\r\n    //\r\n    //             }\r\n    //\r\n    //             function surroundMiddleDeckWithDots() {\r\n    //                 for (let i = 0; i < length; i++) {\r\n    //                     aIguessField.battleField[extremeDeckCoordinate() + 10] = '*';\r\n    //                     aIguessField.battleField[extremeDeckCoordinate() - 10] = '*';\r\n    //\r\n    //                     humanField.battleField[extremeDeckCoordinate() + 10] = '*';\r\n    //                     humanField.battleField[extremeDeckCoordinate() - 10] = '*';\r\n    //                 }\r\n    //             }\r\n    //\r\n    //             surroundExtremeDeckWithDots();\r\n    //             surroundFinalDeckWithDots();\r\n    //             surroundMiddleDeckWithDots();\r\n    //\r\n    //         }\r\n    //         getSunkShipLength();\r\n    //         surroundShipWithDots();\r\n    //\r\n    //     };\r\n    //\r\n    //     switch (isVertical) {\r\n    //         case 1: processVertical(); break;\r\n    //         case 0: processHorizontal(); break;\r\n    //         default: surroundCoordinateWithDots();\r\n    //     }\r\n    //\r\n    //     this.attackVars.lastSuccessAttackCoordinate = null;\r\n    //     this.attackVars.possibleAttackCoords = [];\r\n    //\r\n    // };\r\n    //\r\n    // attackPossibleCoords() {\r\n    //\r\n    //     switch (humanField.battleField[this.attackVars.possibleAttackCoords[0]]) {\r\n    //         case '@':\r\n    //             humanField.battleField[this.attackVars.possibleAttackCoords[0]] = '*';\r\n    //             aIguessField.battleField[this.attackVars.possibleAttackCoords[0]] = '*';\r\n    //             this.attackVars.possibleAttackCoords = [];\r\n    //             break;\r\n    //         case '#':\r\n    //             aIguessField.battleField[this.attackVars.possibleAttackCoords[0]] = 'X';\r\n    //             humanField.battleField[this.attackVars.possibleAttackCoords[0]] = 'X';\r\n    //             this.aiAttacks();\r\n    //             break;\r\n    //         case 'X':\r\n    //             this.attackVars.possibleAttackCoords.splice(0,1);\r\n    //             this.attackPossibleCoords();\r\n    //             break;\r\n    //         case '*':\r\n    //             this.attackVars.possibleAttackCoords.splice(0,1);\r\n    //             this.attackPossibleCoords();\r\n    //             break;\r\n    //         default: alert(\"default case in attackPossibleCoords()\");\r\n    //             break;\r\n    //     }\r\n    //     this.isGameOver(humanField);\r\n    // };\r\n\r\n}\r\n\r\nexport const humanField = new HumanField();\r\nexport const aiField = new AiField();\r\nexport const humanGuessField = new Field();\r\nconst aIguessField = new Field();\r\n\r\n\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}