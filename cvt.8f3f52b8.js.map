{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/ttf/cvt.js"],"names":["cvt","SimpleTable","constructor","dict","dataview","p","n","length","Array","map","_","fword"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,GAAN,SAAkBC,wBAAlB,CAA8B;AAC5BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAQ,MAAMF,IAAN,EAAYC,QAAZ,CAAd,CAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAME,CAAC,GAAGH,IAAI,CAACI,MAAL,GAAc,CAAxB;AACA,uBAAK,IAAL,EAAY,OAAZ,EAAoB,MAAM,CAAC,GAAG,IAAIC,KAAJ,CAAUF,CAAV,CAAJ,EAAkBG,GAAlB,CAAuBC,CAAD,IAAOL,CAAC,CAACM,KAA/B,CAA1B;AACD;;AAZ2B","file":"cvt.8f3f52b8.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../../simple-table.js\";\nimport lazy from \"../../../../lazy.js\";\n\n/**\n * The OpenType `cvt` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/cvt\n */\nclass cvt extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n    //\n    // The actual data is n instructions, where n is the number of\n    // FWORD items that fit in the size of the table. That is:\n    //\n    //   n = table length / sizeof(int16)\n    //     = table length / 2;\n    //\n    const n = dict.length / 2;\n    lazy(this, `items`, () => [...new Array(n)].map((_) => p.fword));\n  }\n}\n\nexport { cvt };\n"]}