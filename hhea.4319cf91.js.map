{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/hhea.js"],"names":["hhea","SimpleTable","constructor","dict","dataview","p","majorVersion","uint16","minorVersion","ascender","fword","descender","lineGap","advanceWidthMax","ufword","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","int16","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","verifyLength"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAN,SAAmBC,wBAAnB,CAA+B;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAQ,MAAMF,IAAN,EAAYC,QAAZ,CAAd;AAEA,SAAKE,YAAL,GAAoBD,CAAC,CAACE,MAAtB;AACA,SAAKC,YAAL,GAAoBH,CAAC,CAACE,MAAtB;AACA,SAAKE,QAAL,GAAgBJ,CAAC,CAACK,KAAlB;AACA,SAAKC,SAAL,GAAiBN,CAAC,CAACK,KAAnB;AACA,SAAKE,OAAL,GAAeP,CAAC,CAACK,KAAjB;AACA,SAAKG,eAAL,GAAuBR,CAAC,CAACS,MAAzB;AACA,SAAKC,kBAAL,GAA0BV,CAAC,CAACK,KAA5B;AACA,SAAKM,mBAAL,GAA2BX,CAAC,CAACK,KAA7B;AACA,SAAKO,UAAL,GAAkBZ,CAAC,CAACK,KAApB;AACA,SAAKQ,cAAL,GAAsBb,CAAC,CAACc,KAAxB;AACA,SAAKC,aAAL,GAAqBf,CAAC,CAACc,KAAvB;AACA,SAAKE,WAAL,GAAmBhB,CAAC,CAACc,KAArB;AACAd,IAAAA,CAAC,CAACc,KAAF;AACAd,IAAAA,CAAC,CAACc,KAAF;AACAd,IAAAA,CAAC,CAACc,KAAF;AACAd,IAAAA,CAAC,CAACc,KAAF;AACA,SAAKG,gBAAL,GAAwBjB,CAAC,CAACc,KAA1B;AACA,SAAKI,gBAAL,GAAwBlB,CAAC,CAACE,MAA1B;AAEAF,IAAAA,CAAC,CAACmB,YAAF;AACD;;AAxB4B","file":"hhea.4319cf91.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../simple-table.js\";\n\n/**\n * The OpenType `hhea` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/hhea\n */\nclass hhea extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n\n    this.majorVersion = p.uint16;\n    this.minorVersion = p.uint16;\n    this.ascender = p.fword;\n    this.descender = p.fword;\n    this.lineGap = p.fword;\n    this.advanceWidthMax = p.ufword;\n    this.minLeftSideBearing = p.fword;\n    this.minRightSideBearing = p.fword;\n    this.xMaxExtent = p.fword;\n    this.caretSlopeRise = p.int16;\n    this.caretSlopeRun = p.int16;\n    this.caretOffset = p.int16;\n    p.int16;\n    p.int16;\n    p.int16;\n    p.int16;\n    this.metricDataFormat = p.int16;\n    this.numberOfHMetrics = p.uint16;\n\n    p.verifyLength();\n  }\n}\n\nexport { hhea };\n"]}