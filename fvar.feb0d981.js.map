{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/variation/fvar.js"],"names":["fvar","SimpleTable","constructor","dict","dataview","p","majorVersion","uint16","minorVersion","axesArrayOffset","Offset16","axisCount","axisSize","instanceCount","instanceSize","axisStart","tableStart","currentPosition","Array","map","_","VariationAxisRecord","instanceStart","instances","i","push","InstanceRecord","getSupportedAxes","axes","a","tag","getAxis","name","find","minValue","fixed","defaultValue","maxValue","flags","axisNameID","size","start","subfamilyNameID","coordinates","postScriptNameID"],"mappings":"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","file":"fvar.feb0d981.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../../simple-table.js\";\nimport lazy from \"../../../../lazy.js\";\n\n/**\n * The OpenType `fvar` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n */\nclass fvar extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n\n    this.majorVersion = p.uint16;\n    this.minorVersion = p.uint16;\n    this.axesArrayOffset = p.Offset16;\n    p.uint16;\n    this.axisCount = p.uint16;\n    this.axisSize = p.uint16;\n    this.instanceCount = p.uint16;\n    this.instanceSize = p.uint16;\n\n    const axisStart = this.tableStart + this.axesArrayOffset;\n    lazy(this, `axes`, () => {\n      p.currentPosition = axisStart;\n      return [...new Array(this.axisCount)].map(\n        (_) => new VariationAxisRecord(p)\n      );\n    });\n\n    const instanceStart = axisStart + this.axisCount * this.axisSize;\n    lazy(this, `instances`, () => {\n      let instances = [];\n      for (let i = 0; i < this.instanceCount; i++) {\n        p.currentPosition = instanceStart + i * this.instanceSize;\n        instances.push(\n          new InstanceRecord(p, this.axisCount, this.instanceSize)\n        );\n      }\n      return instances;\n    });\n  }\n\n  getSupportedAxes() {\n    return this.axes.map((a) => a.tag);\n  }\n\n  getAxis(name) {\n    return this.axes.find((a) => a.tag === name);\n  }\n}\n\nclass VariationAxisRecord {\n  constructor(p) {\n    this.tag = p.tag;\n    this.minValue = p.fixed;\n    this.defaultValue = p.fixed;\n    this.maxValue = p.fixed;\n    this.flags = p.flags(16);\n    this.axisNameID = p.uint16;\n  }\n}\n\nclass InstanceRecord {\n  constructor(p, axisCount, size) {\n    let start = p.currentPosition;\n    this.subfamilyNameID = p.uint16;\n    p.uint16;\n    this.coordinates = [...new Array(axisCount)].map((_) => p.fixed);\n    if (p.currentPosition - start < size) {\n      this.postScriptNameID = p.uint16;\n    }\n  }\n}\n\nexport { fvar };\n"]}