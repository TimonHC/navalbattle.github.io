{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/ttf/glyf.js"],"names":["glyf","SimpleTable","constructor","dict","dataview","p","getGlyphData","offset","length","parser","currentPosition","tableStart","readBytes"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAN,SAAmBC,wBAAnB,CAA+B;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAQ,MAAMF,IAAN,EAAYC,QAAZ,CAAd,CAD0B,CAE1B;AACD;;AAEDE,EAAAA,YAAY,CAACC,MAAD,EAASC,MAAT,EAAiB;AAC3B,SAAKC,MAAL,CAAYC,eAAZ,GAA8B,KAAKC,UAAL,GAAkBJ,MAAhD;AACA,WAAO,KAAKE,MAAL,CAAYG,SAAZ,CAAsBJ,MAAtB,CAAP;AACD;;AAT4B","file":"glyf.4bbef507.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../../simple-table.js\";\n\n/**\n * The OpenType `glyf` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/glyf\n */\nclass glyf extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n    // This table is not really a table, but a pure data block.\n  }\n\n  getGlyphData(offset, length) {\n    this.parser.currentPosition = this.tableStart + offset;\n    return this.parser.readBytes(length);\n  }\n}\n\nexport { glyf };\n"]}