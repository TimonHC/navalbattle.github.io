{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/ttf/gasp.js"],"names":["gasp","SimpleTable","constructor","dict","dataview","p","version","uint16","numRanges","getter","Array","map","_","GASPRange","rangeMaxPPEM","rangeGaspBehavior"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAN,SAAmBC,wBAAnB,CAA+B;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAQ,MAAMF,IAAN,EAAYC,QAAZ,CAAd;AAEA,SAAKE,OAAL,GAAeD,CAAC,CAACE,MAAjB;AACA,SAAKC,SAAL,GAAiBH,CAAC,CAACE,MAAnB;;AAEA,UAAME,MAAM,GAAG,MACb,CAAC,GAAG,IAAIC,KAAJ,CAAU,KAAKF,SAAf,CAAJ,EAA+BG,GAA/B,CAAoCC,CAAD,IAAO,IAAIC,SAAJ,CAAcR,CAAd,CAA1C,CADF;;AAEA,uBAAK,IAAL,EAAY,YAAZ,EAAyBI,MAAzB;AACD;;AAV4B;AAa/B;AACA;AACA;;;;;AACA,MAAMI,SAAN,CAAgB;AACdX,EAAAA,WAAW,CAACG,CAAD,EAAI;AACb,SAAKS,YAAL,GAAoBT,CAAC,CAACE,MAAtB;AACA,SAAKQ,iBAAL,GAAyBV,CAAC,CAACE,MAA3B;AACD;;AAJa","file":"gasp.f5a50ed0.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../../simple-table.js\";\nimport lazy from \"../../../../lazy.js\";\n\n/**\n * The OpenType `gasp` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/gasp\n */\nclass gasp extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n\n    this.version = p.uint16;\n    this.numRanges = p.uint16;\n\n    const getter = () =>\n      [...new Array(this.numRanges)].map((_) => new GASPRange(p));\n    lazy(this, `gaspRanges`, getter);\n  }\n}\n\n/**\n * GASPRange record\n */\nclass GASPRange {\n  constructor(p) {\n    this.rangeMaxPPEM = p.uint16;\n    this.rangeGaspBehavior = p.uint16;\n  }\n}\n\nexport { gasp };\n"]}