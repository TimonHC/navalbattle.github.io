{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/ttf/prep.js"],"names":["prep","SimpleTable","constructor","dict","dataview","p","Array","length","map","_","uint8"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAN,SAAmBC,wBAAnB,CAA+B;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAQ,MAAMF,IAAN,EAAYC,QAAZ,CAAd,CAD0B,CAE1B;AACA;AACA;AACA;;AACA,uBAAK,IAAL,EAAY,cAAZ,EAA2B,MACzB,CAAC,GAAG,IAAIE,KAAJ,CAAUH,IAAI,CAACI,MAAf,CAAJ,EAA4BC,GAA5B,CAAiCC,CAAD,IAAOJ,CAAC,CAACK,KAAzC,CADF;AAGD;;AAV4B","file":"prep.1429b7b2.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../../simple-table.js\";\nimport lazy from \"../../../../lazy.js\";\n\n/**\n * The OpenType `prep` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/prep\n */\nclass prep extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n    //\n    // The actual data is n instructions, where n is the number of\n    // uint8 items that fit in the size of the table... so, table.length\n    //\n    lazy(this, `instructions`, () =>\n      [...new Array(dict.length)].map((_) => p.uint8)\n    );\n  }\n}\n\nexport { prep };\n"]}