{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/other/hdmx.js"],"names":["hdmx","SimpleTable","constructor","dict","dataview","tables","p","numGlyphs","hmtx","version","uint16","numRecords","int16","sizeDeviceRecord","int32","records","Array","map","_","DeviceRecord","pixelSize","uint8","maxWidth","widths","readBytes"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAN,SAAmBC,wBAAnB,CAA+B;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiBC,MAAjB,EAAyB;AAClC,UAAM;AAAEC,MAAAA;AAAF,QAAQ,MAAMH,IAAN,EAAYC,QAAZ,CAAd;AACA,UAAMG,SAAS,GAAGF,MAAM,CAACG,IAAP,CAAYD,SAA9B;AACA,SAAKE,OAAL,GAAeH,CAAC,CAACI,MAAjB;AACA,SAAKC,UAAL,GAAkBL,CAAC,CAACM,KAApB;AACA,SAAKC,gBAAL,GAAwBP,CAAC,CAACQ,KAA1B;AACA,SAAKC,OAAL,GAAe,CAAC,GAAG,IAAIC,KAAJ,CAAUL,UAAV,CAAJ,EAA2BM,GAA3B,CACZC,CAAD,IAAO,IAAIC,YAAJ,CAAiBb,CAAjB,EAAoBC,SAApB,CADM,CAAf;AAGD;;AAV4B;;;;AAa/B,MAAMY,YAAN,CAAmB;AACjBjB,EAAAA,WAAW,CAACI,CAAD,EAAIC,SAAJ,EAAe;AACxB,SAAKa,SAAL,GAAiBd,CAAC,CAACe,KAAnB;AACA,SAAKC,QAAL,GAAgBhB,CAAC,CAACe,KAAlB;AACA,SAAKE,MAAL,GAAcjB,CAAC,CAACkB,SAAF,CAAYjB,SAAZ,CAAd;AACD;;AALgB","file":"hdmx.829462f8.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../../simple-table.js\";\n\n/**\n * The OpenType `hdmx` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/hdmx\n */\nclass hdmx extends SimpleTable {\n  constructor(dict, dataview, tables) {\n    const { p } = super(dict, dataview);\n    const numGlyphs = tables.hmtx.numGlyphs;\n    this.version = p.uint16;\n    this.numRecords = p.int16;\n    this.sizeDeviceRecord = p.int32;\n    this.records = [...new Array(numRecords)].map(\n      (_) => new DeviceRecord(p, numGlyphs)\n    );\n  }\n}\n\nclass DeviceRecord {\n  constructor(p, numGlyphs) {\n    this.pixelSize = p.uint8;\n    this.maxWidth = p.uint8;\n    this.widths = p.readBytes(numGlyphs);\n  }\n}\n\nexport { hdmx };\n"]}