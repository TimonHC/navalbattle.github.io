{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/advanced/BASE.js"],"names":["BASE","SimpleTable","constructor","dict","dataview","p","majorVersion","uint16","minorVersion","horizAxisOffset","Offset16","vertAxisOffset","AxisTable","offset","itemVarStoreOffset","Offset32","baseTagListOffset","baseScriptListOffset","BaseTagListTable","BaseScriptListTable","baseTagCount","baselineTags","Array","map","_","tag","baseScriptCount","recordStart","currentPosition","BaseScriptRecord","start","baseScriptListTableStart","baseScriptTag","baseScriptOffset","BaseScriptTable","baseValuesOffset","defaultMinMaxOffset","baseLangSysCount","baseLangSysRecords","BaseLangSysRecord","BaseValuesTable","MinMaxTable","baseScriptTableStart","baseLangSysTag","minMaxOffset","parser","defaultBaselineIndex","baseCoordCount","baseCoords","getTable","id","BaseCoordTable","minCoord","maxCoord","featMinMaxCount","FeatMinMaxRecord","featureTableTag","baseCoordFormat","coordinate","int16","referenceGlyph","baseCoordPoint","deviceTable"],"mappings":"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","file":"BASE.b7d116ca.js","sourceRoot":"..","sourcesContent":["import lazy from \"../../../lazy.js\";\nimport { SimpleTable } from \"../simple-table.js\";\n\n/**\n * The OpenType `BASE` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/BASE\n */\nclass BASE extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n\n    this.majorVersion = p.uint16;\n    this.minorVersion = p.uint16;\n    this.horizAxisOffset = p.Offset16; // from beginning of BASE table\n    this.vertAxisOffset = p.Offset16; // from beginning of BASE table\n\n    lazy(\n      this,\n      `horizAxis`,\n      () =>\n        new AxisTable({ offset: dict.offset + this.horizAxisOffset }, dataview)\n    );\n    lazy(\n      this,\n      `vertAxis`,\n      () =>\n        new AxisTable({ offset: dict.offset + this.vertAxisOffset }, dataview)\n    );\n\n    if (this.majorVersion === 1 && this.minorVersion === 1) {\n      this.itemVarStoreOffset = p.Offset32; // from beginning of BASE table\n      lazy(\n        this,\n        `itemVarStore`,\n        () =>\n          new AxisTable(\n            { offset: dict.offset + this.itemVarStoreOffset },\n            dataview\n          )\n      );\n    }\n  }\n}\n\n/**\n * Axis table\n */\nclass AxisTable extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview, `AxisTable`);\n\n    this.baseTagListOffset = p.Offset16; // from beginning of Axis table\n    this.baseScriptListOffset = p.Offset16; // from beginning of Axis table\n\n    lazy(\n      this,\n      `baseTagList`,\n      () =>\n        new BaseTagListTable(\n          { offset: dict.offset + this.baseTagListOffset },\n          dataview\n        )\n    );\n    lazy(\n      this,\n      `baseScriptList`,\n      () =>\n        new BaseScriptListTable(\n          { offset: dict.offset + this.baseScriptListOffset },\n          dataview\n        )\n    );\n  }\n}\n\nclass BaseTagListTable extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview, `BaseTagListTable`);\n    this.baseTagCount = p.uint16;\n    // TODO: make lazy?\n    this.baselineTags = [...new Array(this.baseTagCount)].map((_) => p.tag);\n  }\n}\n\nclass BaseScriptListTable extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview, `BaseScriptListTable`);\n    this.baseScriptCount = p.uint16;\n\n    const recordStart = p.currentPosition;\n    lazy(this, `baseScriptRecords`, () => {\n      p.currentPosition = recordStart;\n      return [...new Array(this.baseScriptCount)].map(\n        (_) => new BaseScriptRecord(this.start, p)\n      );\n    });\n  }\n}\n\nclass BaseScriptRecord {\n  constructor(baseScriptListTableStart, p) {\n    this.baseScriptTag = p.tag;\n    this.baseScriptOffset = p.Offset16; // from beginning of BaseScriptList\n    lazy(this, `baseScriptTable`, () => {\n      p.currentPosition = baseScriptListTableStart + this.baseScriptOffset;\n      return new BaseScriptTable(p);\n    });\n  }\n}\n\nclass BaseScriptTable {\n  constructor(p) {\n    this.start = p.currentPosition;\n    this.baseValuesOffset = p.Offset16; // from beginning of BaseScript table\n    this.defaultMinMaxOffset = p.Offset16; // from beginning of BaseScript table\n    this.baseLangSysCount = p.uint16;\n    this.baseLangSysRecords = [...new Array(this.baseLangSysCount)].map(\n      (_) => new BaseLangSysRecord(this.start, p)\n    );\n\n    lazy(this, `baseValues`, () => {\n      p.currentPosition = this.start + this.baseValuesOffset;\n      return new BaseValuesTable(p);\n    });\n\n    lazy(this, `defaultMinMax`, () => {\n      p.currentPosition = this.start + this.defaultMinMaxOffset;\n      return new MinMaxTable(p);\n    });\n  }\n}\n\nclass BaseLangSysRecord {\n  constructor(baseScriptTableStart, p) {\n    this.baseLangSysTag = p.tag;\n    this.minMaxOffset = p.Offset16; // from beginning of BaseScript table\n    lazy(this, `minMax`, () => {\n      p.currentPosition = baseScriptTableStart + this.minMaxOffset;\n      return new MinMaxTable(p);\n    });\n  }\n}\n\nclass BaseValuesTable {\n  constructor(p) {\n    this.parser = p;\n    this.start = p.currentPosition;\n\n    this.defaultBaselineIndex = p.uint16;\n    this.baseCoordCount = p.uint16;\n    this.baseCoords = [...new Array(this.baseCoordCount)].map(\n      (_) => p.Offset16\n    );\n  }\n  getTable(id) {\n    this.parser.currentPosition = this.start + this.baseCoords[id];\n    return new BaseCoordTable(this.parser);\n  }\n}\n\nclass MinMaxTable {\n  constructor(p) {\n    this.minCoord = p.Offset16;\n    this.maxCoord = p.Offset16;\n    this.featMinMaxCount = p.uint16;\n\n    const recordStart = p.currentPosition;\n    lazy(this, `featMinMaxRecords`, () => {\n      p.currentPosition = recordStart;\n      return [...new Array(this.featMinMaxCount)].map(\n        (_) => new FeatMinMaxRecord(p)\n      );\n    });\n  }\n}\n\nclass FeatMinMaxRecord {\n  constructor(p) {\n    this.featureTableTag = p.tag;\n    this.minCoord = p.Offset16;\n    this.maxCoord = p.Offset16;\n  }\n}\n\nclass BaseCoordTable {\n  constructor(p) {\n    this.baseCoordFormat = p.uint16;\n    this.coordinate = p.int16;\n    if (this.baseCoordFormat === 2) {\n      this.referenceGlyph = p.uint16;\n      this.baseCoordPoint = p.uint16;\n    }\n    if (this.baseCoordFormat === 3) {\n      this.deviceTable = p.Offset16;\n    }\n  }\n}\n\nexport { BASE };\n"]}