{"version":3,"sources":["node_modules/lib-font/src/opentype/tables/simple/color/CPAL.js"],"names":["CPAL","SimpleTable","constructor","dict","dataview","p","version","uint16","numPaletteEntries","numPalettes","numColorRecords","offsetFirstColorRecord","Offset32","colorRecordIndices","Array","map","_","currentPosition","tableStart","ColorRecord","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","PaletteTypeArray","PaletteLabelsArray","PaletteEntryLabelArray","blue","uint8","green","red","alpha","paletteTypes","uint32","paletteLabels","paletteEntryLabels"],"mappings":"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","file":"CPAL.f7ec8a3a.js","sourceRoot":"..","sourcesContent":["import { SimpleTable } from \"../../simple-table.js\";\nimport lazy from \"../../../../lazy.js\";\n\n/**\n * The OpenType `CPAL` table.\n *\n * See https://docs.microsoft.com/en-us/typography/opentype/spec/CPAL\n */\nclass CPAL extends SimpleTable {\n  constructor(dict, dataview) {\n    const { p } = super(dict, dataview);\n\n    this.version = p.uint16;\n    this.numPaletteEntries = p.uint16;\n    const numPalettes = (this.numPalettes = p.uint16);\n    this.numColorRecords = p.uint16;\n    this.offsetFirstColorRecord = p.Offset32;\n    this.colorRecordIndices = [...new Array(this.numPalettes)].map(\n      (_) => p.uint16\n    );\n\n    lazy(this, `colorRecords`, () => {\n      p.currentPosition = this.tableStart + this.offsetFirstColorRecord;\n      return [...new Array(this.numColorRecords)].map(\n        (_) => new ColorRecord(p)\n      );\n    });\n\n    // Index of each paletteâ€™s first color record in the combined color record array.\n\n    if (this.version === 1) {\n      this.offsetPaletteTypeArray = p.Offset32; // from the beginning of CPAL table to the Palette Type Array.\n      this.offsetPaletteLabelArray = p.Offset32; // from the beginning of CPAL table to the Palette Labels Array.\n      this.offsetPaletteEntryLabelArray = p.Offset32; // from the beginning of CPAL table to the Palette Entry Label Array.\n\n      lazy(this, `paletteTypeArray`, () => {\n        p.currentPosition = this.tableStart + this.offsetPaletteTypeArray;\n        return new PaletteTypeArray(p, numPalettes);\n      });\n\n      lazy(this, `paletteLabelArray`, () => {\n        p.currentPosition = this.tableStart + this.offsetPaletteLabelArray;\n        return new PaletteLabelsArray(p, numPalettes);\n      });\n\n      lazy(this, `paletteEntryLabelArray`, () => {\n        p.currentPosition = this.tableStart + this.offsetPaletteEntryLabelArray;\n        return new PaletteEntryLabelArray(p, numPalettes);\n      });\n    }\n  }\n}\n\nclass ColorRecord {\n  constructor(p) {\n    this.blue = p.uint8;\n    this.green = p.uint8;\n    this.red = p.uint8;\n    this.alpha = p.uint8;\n  }\n}\n\nclass PaletteTypeArray {\n  constructor(p, numPalettes) {\n    // see https://docs.microsoft.com/en-us/typography/opentype/spec/cpal#palette-type-array\n    this.paletteTypes = [...new Array(numPalettes)].map((_) => p.uint32);\n  }\n}\n\nclass PaletteLabelsArray {\n  constructor(p, numPalettes) {\n    // see https://docs.microsoft.com/en-us/typography/opentype/spec/cpal#palette-labels-array\n    this.paletteLabels = [...new Array(numPalettes)].map((_) => p.uint16);\n  }\n}\n\nclass PaletteEntryLabelArray {\n  constructor(p, numPalettes) {\n    // see https://docs.microsoft.com/en-us/typography/opentype/spec/cpal#palette-entry-label-array\n    this.paletteEntryLabels = [...new Array(numPalettes)].map((_) => p.uint16);\n  }\n}\n\nexport { CPAL };\n"]}